name: Build plugin
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with: { go-version: "^1.15.2" }
      - uses: actions/setup-node@v1
        with: { node-version: "14.x" }
      - uses: actions/checkout@v2
      - run: npm ci
      - name: Build plugin backend
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: -v buildAll
      - name: Build plugin frontend
        run: npx grafana-toolkit plugin:build
      - name: Package plugin
        run: |
          PLUGIN_ID="$(cat ./dist/plugin.json|jq '.id'| sed s/\"//g)"
          PLUGIN_VERSION="$(cat ./dist/plugin.json|jq '.info.version'| sed s/\"//g)"
          mkdir packages
          cd dist && zip -r ../packages/"${PLUGIN_ID}-${PLUGIN_VERSION}.zip" .
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: package
          path: ./packages

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with: { name: package }
      - id: package_name
        run: |
          P="$(ls ./package/*.zip)"
          echo "::set-output name=path::${P}"
          echo "::set-output name=name::$(basename $P)"
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: akips-grafana ${{ github.ref }}
          draft: ${{ contains(github.ref, 'test') }}
          prerelease: ${{ contains(github.ref, 'pre') }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package_name.outputs.path }}
          asset_name: ${{ steps.package_name.outputs.name }}
          asset_content_type: application/zip
